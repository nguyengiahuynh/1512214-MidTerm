{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/FireBaseConfig.js","index.js"],"names":["connect","state","auth","firebase","dispatch","signOut","getState","_ref2","getFirebase","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","email","SignedOutLinks","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","ProjectSummary","_ref","project","title","ProjectList","projects","map","id","key","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","firestoreReducer","data","content","authorFirstName","authorLastName","provider","GoogleAuthProvider","SignIn","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","handleGoogleSignin","signInWithPopup","result","credential","accessToken","user","catch","error","code","message","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","initials","CreateProject","createProject","add","objectSpread","authorID","createAt","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","presence","sessions","attachAuthIsReady","useFirestoreForProfile","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a08961fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport firebase from \"firebase\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions' \r\n\r\nconst SignedInLinks = (props) => {\r\n\treturn (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn pink lighten'>Xin chào {props.auth.email}!!</NavLink></li>\r\n        </ul>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res) => {\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n\treturn (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n\t)\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\t// const user = localStorage.getItem(\"name\");\r\n\tconst {auth} = props;\r\n\tconst links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-3\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to='/' className=\"brand-logo\">1512214-FireBase</Link>\r\n\t\t\t\t{links}\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tauth: state.firebase.auth\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Notifications = () => {\r\n    return (\r\n        <div>\r\n            <p>Notifications</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content-grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by Nguyen Gia Huynh</p>\r\n                <p className='grey-text'>30th October 2018</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project}  />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from './../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth } = this.props;\r\n        if (!auth.uid)\r\n            return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if (!auth.uid)\r\n            return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>31st October 2018</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project.....</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestoreReducer.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport '../../css/SignIn.css'\r\nimport firebase from \"firebase\";\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleGoogleSignin = (e) => {\r\n        const {auth} = this.props\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n           var token = result.credential.accessToken;\r\n           var user = result.user;\r\n        }).catch(function(error) {\r\n           var errorCode = error.code;\r\n           var errorMessage = error.message;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid)\r\n            return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container col s6\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"email\" id=\"email\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"password\" id=\"password\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field text-center\">\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <span>Login failed!!! Wrong email or password</span> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"text-center\">\r\n                    <button className=\"loginBtn loginBtn--google\" onClick={this.handleGoogleSignin}>\r\n                        Login with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)   \r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) \r\n        return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"email\" id='email' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"password\" id='password' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"password\">Password</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='firstName' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='lastName' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n          </div>\r\n          <div className=\"input-field text-center\">\r\n            <button className=\"btn teal lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n                {authError ? <span>{authError}</span> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid)\r\n            return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: 'Toan',\r\n            authorLastName: 'Vo',\r\n            authorID: '123456',\r\n            createAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'bla bla'},\r\n        {id: '2', title: 'collect all the stars', content: 'bla bla bla'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'bla bla bla bla'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('create project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n  });\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAIIRu8xg6Jl-reewB9IKYk9NPzSz2rZNM\",\r\n    authDomain: \"react-redux-firebase-1512214.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-1512214.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-1512214\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"375933914937\"\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true});\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/FireBaseConfig'\n\nconst rrfConfig = {\n    userProfile: 'users',\n    presence: 'presence',\n    sessions: 'sessions',\n    attachAuthIsReady: true,\n    useFirestoreForProfile: true\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, rrfConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n});\n\n\n"],"sourceRoot":""}