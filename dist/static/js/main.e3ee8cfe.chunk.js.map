{"version":3,"sources":["config/FireBaseConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","store/actions/chatActions.js","components/dashboard/Chat.js","components/dashboard/People.js","components/dashboard/ListPeople.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/chatReducer.js","store/reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","provider","auth","GoogleAuthProvider","storage","connect","state","dispatch","signOut","getState","_ref2","getFirebase","then","type","props","react_default","a","createElement","className","onClick","NavLink","to","email","SignedOutLinks","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Chat","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dataChat","profile","UID","display_name","displayName","src","alt","class","style","color","name","id","placeholder","rows","defaultValue","files","map","item","key","Component","withRouter","compose","withFirestore","sendMessage","data","callback","_ref","getFirestore","O","content","length","arr","messages","date","Date","createStringIDChat","infoUser","tempImages","storageRef","ref","imagesStream","forEach","stream","child","concat","getTime","put","push","Promise","all","allUrls","getDownloadURL","url","belongTo","chatAt","toString","images","get","collection","where","dataFirestore","docs","update","doc","lastChatAt","set","catch","e","User","active","user","width","photoURL","status","tempProfile","isEmpty","stars","users","myInfo","_","values","find","myUID","updateUserChatInfo","info","ListPeople","listPeople","People","dashboard_ListPeople","currentPeople","entries","i","Dashboard","_this$props","projects","dashboard_Chat","Redirect","ordered","firestoreConnect","SignIn","password","handleChange","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","handleGoogleSignin","loginWithGoogle","authError","margin","backgroundColor","onSubmit","onChange","htmlFor","href","bind","creds","credentials","signInWithEmailAndPassword","err","_ref4","signInWithPopup","res","username","phoneNumber","SignUp","firstName","lastName","signUp","newUser","_ref3","createUserWithEmailAndPassword","initials","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initState","authReducer","arguments","undefined","action","objectSpread","message","initialState","chatReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","chat","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","presence","sessions","attachAuthIsReady","useFirestoreForProfile","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3ee8cfe.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAIIRu8xg6Jl-reewB9IKYk9NPzSz2rZNM\",\r\n    authDomain: \"react-redux-firebase-1512214.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-1512214.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-1512214\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"375933914937\"\r\n  };\r\n  \r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true});\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const storage = firebase.storage()\r\nexport default firebase;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport firebase from \"firebase\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions' \r\n\r\nconst SignedInLinks = (props) => {\r\n\treturn (\r\n        <ul className=\"right\">\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn pink lighten'>Xin chào {props.auth.email}!!</NavLink></li>\r\n        </ul>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)","import { provider } from '../../config/FireBaseConfig'\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res) => {\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    })\r\n  }\r\n}\r\n\r\nexport const loginWithGoogle = () => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().signInWithPopup(provider).then(res => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n      const user = res.user;\r\n      firestore.collection('users').doc(res.user.uid).set({\r\n        display_name: user.displayName,\r\n        username: user.displayName,\r\n        photoURL: user.photoURL,\r\n        email: user.email,\r\n        phoneNumber: user.phoneNumber,\r\n        status: 'offline',\r\n        UID: user.uid\r\n      })\r\n    }).catch(err => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n\treturn (\r\n                <div>\r\n                        \r\n                </div>\r\n\t)\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\t// const user = localStorage.getItem(\"name\");\r\n\tconst {auth} = props;\r\n\tconst links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav className=\"nav-wrapper grey darken-3\">\r\n\t\t\t\t<Link to='/' className=\"brand-logo\">1512214-FireBase-ChatApp</Link>\r\n\t\t\t\t{links}\r\n\t\t\t</nav>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tauth: state.firebase.auth\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import {storage} from '../../config/FireBaseConfig'\r\nimport {formatDistance, compareDesc} from 'date-fns'\r\nimport locale from 'date-fns/locale/vi'\r\nimport format from 'date-fns/format'\r\n\r\n\r\nexport function createStringIDChat(string1, string2){\r\n    if(string1 < string2){\r\n      return string1 + string2;\r\n    }\r\n    return string2 + string1;\r\n  }\r\n\r\nexport function formatDate(date, name='DD/MM/YYYY') {\r\n    return format(new Date(date), name, {locale: locale})\r\n} \r\n\r\nexport function compareDateReverse(dateLeft, dateRight){\r\n  return compareDesc(new Date(dateLeft), new Date(dateRight))\r\n}\r\n\r\nexport function fromNowTimeStamp(timestamp) {\r\n  let date = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp)\r\n\treturn formatDistance(new Date(date), new Date(), {addSuffix: true, locale: locale})\r\n}\r\n\r\nexport const sendMessage = (data, callback) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firestore = getFirestore()\r\n      const firebase = getFirebase()\r\n      let uid = firebase.auth().O\r\n      if(data.content || data.files.length){\r\n        let arr = data.messages\r\n        let date = new Date()\r\n        let createStringIDChat = createStringIDChat(uid, data.infoUser.uid)\r\n        let content = \"\"\r\n        let tempImages = []\r\n        if(data.content){\r\n          content = data.content\r\n        }\r\n        if(data.files.length){\r\n          let storageRef = storage.ref()\r\n          let imagesStream = []\r\n          data.files.forEach((item) =>{\r\n            let stream = storageRef.child(`images/${new Date().getTime()}`).put(item)\r\n            imagesStream.push(stream)\r\n          })\r\n          Promise.all(imagesStream).then((allUrls) => {\r\n            allUrls.forEach((item) => {\r\n              item.ref.getDownloadURL().then((url) => {\r\n                tempImages.push(url)\r\n              })\r\n            })\r\n          }).then(() => {\r\n            arr.push({\r\n              belongTo: uid,\r\n              chatAt: date.toString(),\r\n              content: content,\r\n              images: tempImages\r\n            })\r\n            console.log(arr);\r\n            firestore.get({collection: 'chatbox', where: ['id', '==', createStringIDChat]}).then((dataFirestore) => {\r\n              if(dataFirestore.docs.length){\r\n                let id = dataFirestore.docs[0].id\r\n                firestore.update({collection: 'chatbox', doc: id}, {lastChatAt: date.toString(), messages: arr}).then(() => {\r\n                  callback()\r\n                })\r\n              }\r\n              else{\r\n                firestore.collection('chatbox').doc(createStringIDChat).set({\r\n                  id: createStringIDChat,\r\n                  lastChatAt: date.toString(),\r\n                  messages: arr\r\n                })\r\n              }\r\n            })\r\n          }).catch(e => console.log(e))\r\n        }\r\n        else{\r\n          arr.push({\r\n            belongTo: uid,\r\n            chatAt: date.toString(),\r\n            content: content,\r\n            images: tempImages\r\n          })\r\n          firestore.get({collection: 'chatbox', where: ['id', '==', createStringIDChat]}).then((dataFirestore) => {\r\n            if(dataFirestore.docs.length){\r\n              let id = dataFirestore.docs[0].id\r\n              firestore.update({collection: 'chatbox', doc: id}, {lastChatAt: date.toString(), messages: arr}).then(() => {\r\n                callback()\r\n              })\r\n            }\r\n            else{\r\n              firestore.collection('chatbox').doc(createStringIDChat).set({\r\n                id: createStringIDChat,\r\n                lastChatAt: date.toString(),\r\n                messages: arr\r\n              })\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  export const updateUserChatInfo = (data) => {\r\n    return{\r\n      type: \"INFO_CHAT_USER\",\r\n      info: data\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { sendMessage } from '../../store/actions/chatActions'\r\nimport {withFirestore} from 'react-redux-firebase'\r\nimport {createStringIDChat, formatDate} from '../../store/actions/chatActions'\r\nimport {compose} from 'redux'\r\nimport _ from 'lodash'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nclass Chat extends Component {\r\n  static propTypes = {\r\n    profile: PropTypes.object,\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    const {dataChat} = this.props\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    const {profile} = this.props\r\n    const uid = profile.uid ? profile.uid : profile.UID\r\n    const display_name = profile.display_name ? profile.display_name : profile.displayName\r\n    return (\r\n      \r\n        <div className=\"chat\">\r\n          <div className=\"chat-header clearfix\">\r\n            <div className=\"logo\">\r\n              <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/195612/chat_avatar_01_green.jpg\" alt=\"logo\" />\r\n            </div>\r\n            <div class=\"chat-about\">\r\n              <div class=\"chat-with\">Chat with Vincent Porter</div>\r\n              <div class=\"chat-num-messages\">already 1 902 messages</div>\r\n            </div>\r\n            <i class=\"fa fa-star\"></i>\r\n          </div>\r\n          {/* end chat-header */}\r\n              <div class=\"chat-history\">\r\n            <ul>\r\n              <li class=\"clearfix\">\r\n                <div class=\"message-data align-right\">\r\n                  <span class=\"message-data-time\" >10:10 AM, Today</span> &nbsp; &nbsp;\r\n                  <span class=\"message-data-name\" >Olia</span> <i class=\"fa fa-circle me\"></i>\r\n                  \r\n                </div>\r\n                <div class=\"message other-message float-right\">\r\n                  Hi Vincent, how are you? How is the project coming along?\r\n                </div>\r\n              </li>\r\n              \r\n              <li>\r\n                <div class=\"message-data\">\r\n                  <span class=\"message-data-name\"><i class=\"fa fa-circle online\"></i> Vincent</span>\r\n                  <span class=\"message-data-time\">10:12 AM, Today</span>\r\n                </div>\r\n                <div class=\"message my-message\">\r\n                  Are we meeting today? Project has been already finished and I have results to show you.\r\n                </div>\r\n              </li>\r\n              \r\n              <li class=\"clearfix\">\r\n                <div class=\"message-data align-right\">\r\n                  <span class=\"message-data-time\" >10:14 AM, Today</span> &nbsp; &nbsp;\r\n                  <span class=\"message-data-name\" >Olia</span> <i class=\"fa fa-circle me\"></i>\r\n                  \r\n                </div>\r\n                <div class=\"message other-message float-right\">\r\n                  Well I am not sure. The rest of the team is not here yet. Maybe in an hour or so? Have you faced any problems at the last phase of the project?\r\n                </div>\r\n              </li>\r\n              \r\n              <li>\r\n                <div class=\"message-data\">\r\n                  <span class=\"message-data-name\"><i class=\"fa fa-circle online\"></i> Vincent</span>\r\n                  <span class=\"message-data-time\">10:20 AM, Today</span>\r\n                </div>\r\n                <div class=\"message my-message\">\r\n                  Actually everything was fine. I'm very excited to show this to our team.\r\n                </div>\r\n              </li>\r\n              \r\n              <li>\r\n                <div class=\"message-data\">\r\n                  <span class=\"message-data-name\"><i class=\"fa fa-circle online\"></i> Vincent</span>\r\n                  <span class=\"message-data-time\">10:31 AM, Today</span>\r\n                </div>\r\n                <i class=\"fa fa-circle online\"></i>\r\n                <i class=\"fa fa-circle online\" style={{color: '#AED2A6'}}></i>\r\n                <i class=\"fa fa-circle online\" style={{color: '#DAE9DA'}}></i>\r\n              </li>\r\n              \r\n            </ul>\r\n            \r\n          </div>\r\n          {/* end chat-history */}\r\n          <div className=\"chat-message clearfix\">\r\n            <form>\r\n              <textarea name=\"message-to-send\" id=\"message-to-send\" placeholder=\"Type message!!\" rows={3}\r\n                defaultValue=\"\"/>\r\n              <span className=\"media\">\r\n                <div className=\"image-box\">\r\n                  <div className=\"preview-box\">\r\n                    {this.state.files && this.state.files.map((item, key) => {\r\n                        return(\r\n                          <div className=\"tag\" key={key}>\r\n                            <button type=\"button\" className=\"close-x\">\r\n                              <span>X</span>\r\n                            </button>\r\n                            <p>{item.name}</p>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\">Send</button>\r\n              </span>\r\n            </form>\r\n          </div>\r\n          {/* end chat-message */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n      sendMessage: (data, callback) => dispatch(sendMessage(data, callback))\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.firebase.profile\r\n    }\r\n  }\r\n\r\nexport default withRouter(\r\n  compose(\r\n    withFirestore,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n  )(Chat)\r\n);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Icon } from 'react-icons-kit'\r\nimport {starO} from 'react-icons-kit/fa/starO'\r\nimport {ic_star} from 'react-icons-kit/md/ic_star'\r\nimport {fromNowTimeStamp} from '../../store/actions/chatActions'\r\nimport {updateUserChatInfo} from '../../store/actions/chatActions'\r\nimport {withFirestore} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport _ from 'lodash'\r\n\r\nclass User extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      active: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const {user} = this.props\r\n    return (\r\n      <div>\r\n        <Link to={\"/chatwith/\" + user.UID}>\r\n          <li className={this.state.active ? \"clearfix active\" : \"clearfix\"}>\r\n            <img width=\"55\" src={user.photoURL} alt=\"avatar\" />\r\n            <div className=\"about\">\r\n              <div className=\"name\">{user.display_name}</div>\r\n              <div className=\"status\">\r\n                {/* <span className={user.status === \"online\" ? \"circle online\" : \"circle offline\"}/> {user.status}\r\n                {user.endAt && user.status === \"offline\" &&\r\n                  <span className=\"atTime\"> {fromNowTimeStamp(user.endAt)}</span>\r\n                } */}\r\n                <i className={user.status === \"online\" ? \"fa fa-circle online\" : \"fa fa-circle offline\"}></i>{user.status}\r\n              </div>\r\n              </div>\r\n            </li>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n      updateUserChatInfo: (data) => dispatch(updateUserChatInfo(data))\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    let tempProfile = state.firebase.profile && state.firebase.profile.isEmpty ? state.firebase.auth : state.firebase.profile\r\n    let uid = tempProfile.uid ? tempProfile.uid : tempProfile.UID\r\n    let stars = []\r\n    if(state.firestore.data.users){\r\n      let temp = _.values(state.firestore.data.users)\r\n      let myInfo = temp.find((item) => {\r\n        return uid === item.UID\r\n      })\r\n      if(myInfo){\r\n        stars = myInfo.stars\r\n      }\r\n    }\r\n    return{\r\n      myUID: uid,\r\n      stars: stars\r\n    }\r\n  }\r\n\r\nexport default withRouter(\r\n  compose(\r\n    withFirestore,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n  )(User)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {withFirestore} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport People from '../../components/dashboard/People'\r\nimport _ from 'lodash'\r\nimport {compareDateReverse} from '../../store/actions/chatActions'\r\nimport { Icon } from 'react-icons-kit'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let arr = [];\r\n  arr =  state.firestore.data.users;\r\n  let currentPeople = state.firebase.auth;\r\n  let listPeople = [];\r\n  if (arr) {\r\n    arr = Object.entries(arr);\r\n    //console.log(arr[0][1].UID);\r\n    for (let i = 0; i < arr.length; i++)\r\n    {\r\n      if (arr[i][1].UID != currentPeople.uid)\r\n        listPeople.push(arr[i][1]);\r\n    }\r\n  }\r\n  return {\r\n    listPeople: listPeople,\r\n    currentPeople: currentPeople\r\n  }\r\n}\r\n\r\nclass ListPeople extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n        <div className=\"people-list\" id=\"people-list\">\r\n          <div className=\"search\">\r\n            <input type=\"text\" placeholder=\"Search\"/>\r\n            {/* <i class=\"fa fa-search\"></i> */}\r\n          </div>\r\n          <ul className=\"list\">\r\n            {!!this.props.listPeople.length && this.props.listPeople.map((item, key) => {\r\n              return(\r\n                  <People user={item} key={key}/>\r\n                  //<p>Hello</p>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  compose(\r\n    withFirestore,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n  )(ListPeople)\r\n);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../css/Dashboard.css'\r\nimport Chat from './Chat'\r\nimport ListPeople from './ListPeople'\r\nimport firebase from '../../config/FireBaseConfig'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth } = this.props;\r\n        if (!auth.uid)\r\n            return <Redirect to='/signin' />\r\n        return (\r\n          <div className=\"container clearfix\">\r\n            <ListPeople />\r\n            <Chat />\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        'users',\r\n        'chat'\r\n    ])\r\n)(Dashboard)","import React, { Component } from 'react'\r\nimport '../../css/SignIn.css'\r\nimport firebase from \"firebase\";\r\nimport { connect } from 'react-redux'\r\nimport { signIn, loginWithGoogle } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleGoogleSignin = () => {\r\n        this.props.loginWithGoogle()\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid)\r\n            return <Redirect to='/' />\r\n        return (\r\n            <div className=\"text-center\" style={{width: '40%', margin: '40px auto', backgroundColor: 'white'}}>\r\n                <form id=\"formLogin\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"email\" id=\"email\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"password\" id=\"password\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field text-center\">\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <span>Login failed!!! Wrong email or password</span> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <p className=\"grey-text text-darken-3\">You don't have account ?</p>\r\n                <a href=\"/signup\">Sign up now</a>\r\n                <div className=\"text-center\">\r\n                    <button className=\"loginBtn loginBtn--google\" onClick={this.handleGoogleSignin.bind(this)}>\r\n                        Login with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        loginWithGoogle: () => dispatch(loginWithGoogle())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)   \r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) \r\n        return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"text-center\" style={{width: '40%', margin: '40px auto', backgroundColor: 'white'}}>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"email\" id='email' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"password\" id='password' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"password\">Password</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='firstName' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='lastName' className=\"validate\" onChange={this.handleChange} />\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n          </div>\r\n          <div className=\"input-field text-center\">\r\n            <button className=\"btn teal lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n                {authError ? <span>{authError}</span> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <p className=\"grey-text text-darken-3\">You had account ?</p>\r\n        <a href=\"/signin\">Log in now</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/chatwith/:id' component={Dashboard} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initialState = {\r\n  infoUser: null\r\n}\r\n\r\nconst chatReducer =  (state = initialState, action) => {\r\n  switch(action.type){\r\n    case 'INFO_CHAT_USER':\r\n      return{\r\n        ...state,\r\n        infoUser: action.info\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default chatReducer;","import authReducer from './authReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport chatReducer from './chatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    chat: chatReducer\r\n  });\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/FireBaseConfig'\n\nconst rrfConfig = {\n    userProfile: 'users',\n    presence: 'presence',\n    sessions: 'sessions',\n    attachAuthIsReady: true,\n    useFirestoreForProfile: true\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, rrfConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n});\n\n\n"],"sourceRoot":""}